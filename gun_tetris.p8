pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- gun tetris
-- by andrew knollmeyer
-- fshh.itch.io

--[[ 
	credit to nadesico19 for much
	of basic tetris design
]]--

function _init()
	cartdata("gun_tetris")

	--activate mouse detection
	poke(0x5f2d,1)
	
	scene_cur=scene_menu
	scene_cur:init()
end

function _update()
	scene_cur:update()
end

function _draw()
	cls()
	scene_cur:draw()
end

--field width and height
fldw=10
fldh=15

--spawn location of tetrominos
spawnx=3
spawny=-1

--number of next tetrominos to preview
npreview=3

--currently selected crosshair
ch_cur=0

--crosshair sprite locations
ch_def={
	{2,2},
	{4,2}
}

--tetromino rotations
tet_def={
	-- 1:i
	{0x0f00,0x2222,0x0f00,0x2222},
	-- 2:o
	{0x0660,0x0660,0x0660,0x0660},
	-- 3:s
	{0x06c0,0x8c40,0x06c0,0x8c40},
	-- 4:z
	{0x0c60,0x2640,0x0c60,0x2640},
	-- 5:j
	{0x08e0,0x6440,0x0e20,0x44c0},
	-- 6:l
	{0x02e0,0x4460,0x0e80,0xc440},
	-- 7:t
	{0x04e0,0x4640,0x0e40,0x4c40}
}

--wallkick locations to test
kick_def={
	-- 1:i
	{
		-- 0->R
		{{0,0},{1,0},{-2,0},{1,-2},{-2,1}},
		-- R->2
		{{0,0},{-1,0},{2,0},{-1,-2},{2,1}},
		-- 2->L
		{{0,0},{1,0},{-2,0},{1,-2},{-2,1}},
		-- L->0
		{{0,0},{-1,0},{2,0},{-1,-2},{2,1}}
	},
	-- 2:o piece does not wallkick
	{},
	-- 3:s
	{
		-- 0->R
		{{0,0},{-1,0},{-1,-1},{0,2},{-1,2}},
		-- R->2
		{{0,0},{-1,0},{-1,1},{0,-2},{-1,-2}},
		-- 2->L
		{{0,0},{-1,0},{-1,-1},{0,2},{-1,2}},
		-- L->0
		{{0,0},{-1,0},{-1,1},{0,-2},{-1,-2}}
	},
	-- 4:z
	{
		-- 0->R
		{{0,0},{-1,0},{-1,-1},{0,2},{-1,2}},
		-- R->2
		{{0,0},{1,0},{1,1},{0,-2},{1,-2}},
		-- 2->L
		{{0,0},{-1,0},{-1,-1},{0,2},{-1,2}},
		-- L->0
		{{0,0},{1,0},{1,1},{0,-2},{1,-2}}
	},
	-- everything else
	{
		-- 0->R
		{{0,0},{-1,0},{-1,-1},{0,2},{-1,2}},
		-- R->2
		{{0,0},{1,0},{1,1},{0,-2},{1,-2}},
		-- 2->L
		{{0,0},{1,0},{1,-1},{0,2},{1,2}},
		-- L->0
		{{0,0},{-1,0},{-1,1},{0,-2},{-1,-2}}
	}
}

--scores for different numbers of lines cleared
score_def={
	100,300,500,800
}

function getscoretext(val)
	local s = ""
	local v = abs(val)
    repeat
        s = (v % 0x0.000a / 0x.0001)..s
        v /= 10
    until v==0
	if (val<0)  s = "-"..s
	return s
end 

function draw_crosshair()
	sspr(ch_def[ch_cur][1]*8,ch_def[ch_cur][2]*8,16,16,stat(32)-8,stat(33)-8)
end

function mouse_in_region(x,y,w,h)
	local xgood=(stat(32)>x and stat(32)<=x+w)
	local ygood=(stat(33)>y and stat(33)<=y+h)
	return (xgood and ygood)
end

function mouse_down()
	return stat(34) == 0x1
end

--print string centered on the screen
function printc(str,y,col)
	print(str,64-((#str*4)/2),y,col)
end

field={
	--screen offset
	x=1,
	y=0,
	
	--bitmap for collision
	fixl={},
	
	--bitmap for sprites
	fixsp={},

	init=function(self)
		self.fixl={}
		self.fixsp={}
		for i=1,fldh do
			add(self.fixl,{bits=0})
		end
	end,
	
	draw=function(self)
		map(0,0,0,0,16,16)
		for i in all(self.fixsp) do
			spr(i.idx,
				(self.x+i.x)*8,
				(self.y+i.y)*8)
		end
	end,

	land=function(self,cur,rot,x,y)
		for i=15,0,-1 do
			local bit=band(lshr(tet_def[cur][rot],i),1)
			if bit>0 then
				local l=fldh-(y+flr((15-i)/4))
				self.fixl[l].bits=bor(
					self.fixl[l].bits,
					shl(1,x+(3-i%4)))
				add(self.fixsp,{
					x=x+(3-i%4),
					y=y+flr((15-i)/4),
					idx=cur
				})
			end
		end

		--collect completed lines
		local triml={}
		for i=1,fldh do
			if self.fixl[i].bits==(2^fldw)-1 then
				add(triml,i)
			end
		end

		--collect sprites on completed lines
		local trimsp={}
		add(triml,16) --guard
		for i in all(self.fixsp) do
			local l=fldh-i.y
			for k,v in pairs(triml) do
				if l==v then
					add(trimsp,i)
					break
				end
			end
		end
		del(triml,16)

		return {n=#triml,l=triml,s=trimsp}
	end,

	--remove completed lines
	trim=function(self,triml,trimsp)
		--remove completed lines from collision
		local lines={}
		for i in all(triml) do
			add(lines,self.fixl[i])
		end
		for i in all(lines) do
			del(self.fixl,i)
			add(self.fixl,{bits=0})
		end

		--remove sprites on completed lines
		add(triml,16) -- guard
		for i in all(self.fixsp) do
			local l=fldh-i.y
			for k,v in pairs(triml) do
				if l==v then
					del(self.fixsp,i)
					break
				elseif l<v then
					i.y+=k-1
					break
				end
			end
		end
		del(triml,16)
	end
}

function draw_tet(cur,rot,x,y,ghost)
	--change sprite if drawing ghost
	ghost=ghost or false
	local sp=ghost and 8 or cur

	local tet=tet_def[cur][rot]
	local bit=0
	for i=15,0,-1 do
		bit=band(lshr(tet,i),1)
		if bit>0 then
			spr(sp,
				x+(3-i%4)*8,
				y+flr((15-i)/4)*8)
		end
	end
end

function draw_preview(cur,x,y,mini)
	--change behavior if drawing mini preview
	mini=mini or false

	if not mini then
		local offx=cur<3 and 0 or 4
		local offy=cur==1 and 4 or 0
		draw_tet(cur,1,x+offx,y+offy)
	else
		local tet=tet_def[cur][1]
		local bit=0
		for i=15,0,-1 do
			bit=band(lshr(tet,i),1)
			if bit>0 then
				spr(cur+16,
					x+(3-i%4)*4,
					y+flr((15-i)/4)*4)
			end
		end
	end
end

scene_game={
	--score
	score=0,
	--extra points from hard drop
	hard=0,
	--extra points from soft drop
	soft=0,
	--multiplier from consecutive line clears
	combo=1,

	--next and held tetromino
	tet_next=0,
	tet_hold=0,
	hold_count=0,

	--info about current tetromino
	tet_cur=0,
	tet_rot=0,
	tet_x=0,
	tet_y=0,
	
	--game state
	state=0,
	
	--fall speed and accumulation
	speed=0,
	speed_acc=0,
	
	--landing lag
	landing=lshr(1,4),
	landing_acc=0,

	--trimmed lines
	trim=0,

	-- effect duration and accumulation
	effect_fm=20, -- frame
	effect_acc=0,

	init=function(self)
		self.score=0
		self.hard=0
		self.soft=0
		self.combo=1
		self.tet_cur=0
		self.tet_rot=0
		self.state=1
		self.speed=lshr(1,4)
		self.speed_acc=0
		field:init()

		ch_cur=1
		
		--play music
		--reserve first 3 channels
		--music(0,0,7)
	end,
	
	update=function(self)
		self.update_states[self.state](self)
	end,
	
	draw=function(self)
		--draw field
		field:draw()

		--draw text
		print("next",13*8,1*8+1,5)
		print("next",13*8,1*8,7)
		print("hold",13*8,9*8+1,5)
		print("hold",13*8,9*8,7)
		print(tostr(self.combo).."x",13*8,13*8+1,10)
		print(tostr(self.combo).."x",13*8,13*8,9)
		print("score",13*8-2,14*8+1,5)
		print("score",13*8-2,14*8,7)

		--draw score
		local score_str=getscoretext(self.score)
		print(score_str,15*8+2-#score_str*4,15*8+1,5)
		print(score_str,15*8+2-#score_str*4,15*8,7)

		--draw tetromino
		if self.state!=1 and self.state!=5 then
			if not self:is_collided(0,1) then
				--draw ghost
				local offy=1
				while not self:is_collided(0,offy+1) do
					offy+=1
				end

				draw_tet(self.tet_cur,
					self.tet_rot,
					(field.x+self.tet_x)*8,
					(field.y+self.tet_y+offy)*8,
					true)
			end

			--draw falling tetromino
			draw_tet(self.tet_cur,
				self.tet_rot,
				(field.x+self.tet_x)*8,
				(field.y+self.tet_y)*8)
		end

		--draw next tetromino
		if (self.tet_next!=0) then
			draw_preview(self.tet_next[1],
				(field.x+11)*8,
				(field.y+2)*8-4)

			for i=2,npreview do
				draw_preview(self.tet_next[i],
					(field.x+12)*8,
					((field.y+3)*8)+((i-1)*12),
					true)
			end
		end

		--draw held tetromino
		if (self.tet_hold!=0) then
			draw_preview(self.tet_hold,
				(field.x+11)*8,
				(field.y+10)*8-4)
		end

		--draw line-clear effects
		if self.state==5 then
			laser:draw()
		end

		--draw crosshair
		draw_crosshair()
	end,
	
	update_states={
		--state 1: choose new tetromino
		function(self)
			--cleanup
			self.hard=0
			self.soft=0
			self.hold_count=0
			self.speed_acc=0

			if self.tet_next==0 then
				--initialize next tetrominos
				self.tet_next={}
				for i=1,npreview do
					self.tet_next[i]=flr(rnd(7))+1
				end
			end
			--grab next tetromino
			self.tet_cur=self.tet_next[1]

			--move next tetrominos up
			for i=1,npreview-1 do
				self.tet_next[i]=self.tet_next[i+1]
			end
			self.tet_next[npreview]=flr(rnd(7))+1
			
			--initialize new tetromino
			self.tet_rot=1
			self.tet_x=spawnx
			self.tet_y=spawny
			
			--check game over
			if self:is_collided(0,0) then
				self.state=4
				return
			end
			
			--switch to falling state
			self.state=2
		end,
		
		--state 2: falling
		function(self)
			-- accept input --
			
			--rotation
			if btnp(5) then
				self:rotate_tet()
			end

			--hold
			if btnp(4) and self.hold_count==0 then
				self.state=6
				self.hold_count=1
				return
			end
			
			--horizontal movement
			--move left
			if btnp(0) then
				if (not self:is_collided(-1,0)) then
					self.tet_x-=1
				end
			--move right
			elseif btnp(1) then
				if (not self:is_collided(1,0)) then
					self.tet_x+=1
				end
			end

			--move down
			if btnp(3) then
				self.soft+=1
				self.speed_acc+=1
			end

			--manual landing
			if btnp(2) then
				while not self:is_collided(0,1) do
					self.hard+=2
					self.tet_y+=1
				end
				self.trim=field:land(
					self.tet_cur,self.tet_rot,
					self.tet_x,self.tet_y)
				self.landing_acc=0

				--show effect
				if self.trim.n>0 then
					--init effect
					self.effect_acc=0
					screen_shake:reset(2*self.trim.n,self.effect_fm)
					laser:reset(self.trim)
					self.state=5
				--choose next tetromino
				else
					self.combo=1
					self.state=1
				end
				return
			end
			
			--is it time to fall?
			self.speed_acc+=self.speed
			if self.speed_acc>=1 then
				--fall
				for i=1,flr(self.speed_acc) do
					--has landed
					if (self:is_collided(0,1)) then
						self.landing_acc=0
						self.state=3
						break
					--still has space to fall
					else
						self.tet_y+=1
					end
				end
				
				--cleanup
				self.speed_acc=0
			end
		end,
		
		--state 3: landing
		function(self)
			-- accept input --
			
			--rotation
			if btnp(5) then
				self:rotate_tet()
				
				--check if piece can fall
				if not self:is_collided(0,1) then
					self.speed_acc=0
					self.state=2
					return
				--delay landing if rotated
				elseif self.tet_rot!=last_rot then
					self.landing_acc=0
				end
			end
			
			--hold piece
			if btnp(4) and self.hold_count==0 then
				self.state=6
				self.hold_count=1
				return
			end
			
			--horizontal movement
			--move left
			if btnp(0) then
				if not self:is_collided(-1,0) then
					self.tet_x-=1
					self.landing_acc=0
					--check if piece can fall
					if not self:is_collided(0,1) then
						self.speed_acc=0
						self.state=2
						return
					end
				end
			--move right
			elseif btnp(1) then
				if (not self:is_collided(1,0)) then
					self.tet_x+=1
					self.landing_acc=0
					--check if piece can fall
					if not self:is_collided(0,1) then
						self.speed_acc=0
						self.state=2
						return
					end
				end
			end
			
			--land piece manually
			if btnp(2) or btnp(3) then
				self.landing_acc=1
			end
			
			self.landing_acc+=self.landing
			if self.landing_acc>=1 then
				self.trim=field:land(
					self.tet_cur,self.tet_rot,
					self.tet_x,self.tet_y)
				self.landing_acc=0

				--show effect
				if self.trim.n>0 then
					--init effect
					self.effect_acc=0
					screen_shake:reset(2*self.trim.n,self.effect_fm)
					laser:reset(self.trim)
					self.state=5
				--choose next tetromino
				else
					self.combo=1
					self.state=1
				end
			end
		end,

		--state 4: game over
		function(self)
			scene_end:init(self.score)
			scene_cur=scene_end
		end,

		--state 5: showing effect
		function(self)
			screen_shake:update()

			self.effect_acc+=1
			if self.effect_acc>=self.effect_fm then
				--score based on lines cleared and lines dropped
				local score=score_def[self.trim.n]+self.hard
				--calculate combo multiplier
				self.combo=self.combo+(2*self.trim.n)-2
				--apply combo multiplier
				score*=self.combo
				--10x multiplier for perfect clear
				if (field.fixl[1].bits==0) score*=10
				--update score
				self:add_score(score)
				--end effects
				screen_shake:reset(0,0)
				laser:reset({},0)
				field:trim(self.trim.l,self.trim.s)
				self.state=1
			end
		end,

		--state 6: hold
		function(self)
			self.hard=0
			self.soft=0
			self.speed_acc=0

			--exchange current to held
			if self.tet_hold==0 then
				self.tet_hold=self.tet_cur
				self.tet_cur=self.tet_next[1]

				--move next tetrominos up
				for i=1,npreview-1 do
					self.tet_next[i]=self.tet_next[i+1]
				end
				self.tet_next[npreview]=flr(rnd(7))+1
			else
				local temp=self.tet_cur
				self.tet_cur=self.tet_hold
				self.tet_hold=temp
			end

			--init status
			self.tet_rot=1
			self.tet_x=spawnx
			self.tet_y=spawny

			--check game over
			if self:is_collided(0,0) then
				self.state=4
				return
			end

			--start to fall
			self.state=2
		end
	},
	
	is_collided=function(self,offx,offy)
		local bit,x,y
		local tet=tet_def[self.tet_cur][self.tet_rot]
		for i=15,0,-1 do
			bit=band(lshr(tet,i),1)
			if bit>0 then
				x=self.tet_x+offx+(3-i%4)
				y=self.tet_y+offy+flr((15-i)/4)
				--out of bounds
				if x<0 or x>=fldw then
					return true
				elseif y<0 or y>=fldh then
					return true
				--collided with fixed blocks
				elseif band(lshr(field.fixl[fldh-y].bits,x),1)>0 then
					return true
				end
			end
		end
		--didn't collide
		return false
	end,

	rotate_tet=function(self)
		-- o piece is always good to go
		if self.tet_cur==2 then
			return
		end

		--save previous rotation incase rotation is impossible
		local last_rot=self.tet_rot
		--update current roatation
		self.tet_rot=self.tet_rot%4+1
		--get set of kick data; i set, s/z set, or everything else set
		local kickset=min(self.tet_cur,5)
		local tests=kick_def[kickset][last_rot]
		local offx,offy
		for i=1,5 do
			offx=tests[i][1]
			offy=tests[i][2]
			if not self:is_collided(offx,offy) then
				self.tet_x+=offx
				self.tet_y+=offy
				return
			end
		end

		--piece could not be wall-kicked
		self.tet_rot=last_rot
	end,

	add_score=function(self,score)
		self.score+=shr(score,16)
	end
}

--screen shake
screen_shake={
	amt=0,
	dur=0,
	fade=0,
	t=0,

	reset=function(self,amt,dur)
		self.amt=amt
		self.dur=dur
		self.fade=amt/dur
		self.t=0
		camera(0,0)
	end,

	update=function(self)
		self.t+=1
		camera(cos(self.t/3)*self.amt,cos(self.t/2)*self.amt)
		self.amt-=self.fade
		self.amt=max(0,self.amt)
	end
}

screen_shake_two={
	angle=0,
	intensity=0,
	duration=0,
	speed=0,
	time=0,
	finished=false,
	x=0,
	y=0,

	reset=function(self,angle,intensity,duration,speed)
		self.angle=angle
		self.intensity=intensity
		self.duration=duration
		self.speed=speed
		self.time=duration
		self.finished=false
		self.x=cos(angle)
		self.y=sin(angle)
	end,

	update=function(self)
		if self.time > 0 then
			self.time-=1
		else
			self.finished=true
		end

		if not self.finished then
			local perc=sqrt(self.time/self.duration)
			local r=perc*sin(self.time*self.speed*perc)*self.intensity
			local dx=self.x*r
			local dy=self.y*r
			camera(dx,dy)
		end
	end
}

--laser effect
laser={
	cely_def={
		{16,17},
		{19,21},
		{24,27},
		{31,35}},
	n=0,
	sy=0,
	celh=0,
	acc=0,

	reset=function(self,trim)
		self.n=trim.n
		local l=0
		for i in all(trim.l) do
			l=max(l,i)
		end
		self.sy=(fldh-l)*8
		self.celh=trim.n
		self.acc=0
	end,

	draw=function(self)
		local frame=(self.acc%2)+1
		local cely=self.cely_def[self.n][frame]
		map(0,cely,0,self.sy,16,self.celh)
		self.acc+=1
	end
}

scene_menu={
	selections={
		"start",
		"options",
		"credits",
		"exit"
	},

	highscore=0,

	--coords for selection text
	sely=7*8,

	--selection currently being hovered over
	cur=0,

	init=function(self)
		self.highscore=getscoretext(dget(0))
		self.cur=0
		ch_cur=1
	end,

	update=function(self)
		self.cur=0
		for k,v in pairs(self.selections) do
			local w=#v*4
			local x=64-(w/2)
			if mouse_in_region(x,self.sely+(k*8),w,6) then
				self.cur=k
				break
			end
		end

		if mouse_down() and self.cur>0 then
			if self.cur==1 then
				scene_game:init()
				scene_cur=scene_game
			elseif self.cur==2 then

			elseif self.cur==3 then

			elseif self.cur==4 then

			end
		end
	end,

	draw=function(self)
		--rectfill(0,0,128,128,1)
		map(16,0,0,0,16,16)

		local hs="high score: "..self.highscore
		printc(hs,self.sely-1*8+1,5)
		printc(hs,self.sely-1*8,7)

		for k,v in pairs(self.selections) do
			local hovered=self.cur==k
			local shadow=hovered and 10 or 5
			local main=hovered and 9 or 7
			printc(v,self.sely+(k*8)+1,shadow)
			printc(v,self.sely+(k*8),main)
		end

		draw_crosshair()
	end
}

scene_end={
	high=0,
	new=0,

	init=function(self,new)
		self.high=dget(0)
		self.new=new
		-- save high score
		if (self.new>self.high) dset(0,self.new)
	end,

	update=function(self)
		if btnp(5) then
			scene_menu:init()
			scene_cur=scene_menu
		end
	end,

	draw=function(self)
		printc("game over",4*8+1,2)
		printc("game over",4*8,8)

		local hstr=getscoretext(self.high)
		local nstr=getscoretext(self.new)

		if (self.new<=self.high) then
			printc("your score: "..nstr,7*8,4)
			printc("high score: "..hstr,8*8,7)
		else
			printc("congratulations!",6*8,14)
			printc("new high score: "..nstr,8*8,14)
			printc("previous high score: "..hstr,9*8,7)
		end
		printc("x to return to menu",11*8,6)
	end
}

__gfx__
00000000766666657aaaaaa97bbbbbb3788888827cccccc1799999947eeeeee26dddddd511111111111111714444447744774444222222772227722200000000
0000000067766665a77aaaa9b77bbbb387788882c77cccc197799994e77eeee2d66dddd5dddddddd111111714444447744774444222222772227722200000000
0070070067666665a7aaaaa9b7bbbbb387888882c7ccccc197999994e7eeeee2d6ddddd5ddddddddddddd7dd4444447744774444222222772227722200000000
0007700066666665aaaaaaa9bbbbbbb388888882ccccccc199999994eeeeeee2ddddddd5ccccccccddddd7dd9999977997799999222222772227722200000000
0007700066666665aaaaaaa9bbbbbbb388888882ccccccc199999994eeeeeee2ddddddd5ccccccccddddd7dd9999977997799999888887788877888800000000
0070070066666665aaaaaaa9bbbbbbb388888882ccccccc199999994eeeeeee2ddddddd5dddddddddddd7ddd9999977997799999888887788877888800000000
0000000066666665aaaaaaa9bbbbbbb388888882ccccccc199999994eeeeeee2ddddddd5ddddddddcccc7ccc9999977997799999888887788877888800000000
00000000555555559999999933333333222222221111111144444444222222225555555511111111cccc7ccc9999977997799999888887788877888800000000
00000000000000000000000000000000000000000000000000000000000000000000000011111111cccc7ccc9999779977999999888877888778888800000000
000660000000000000000000000000000000000000000000000000000000000000000000ddddddddcccc7cccaaaa77aa77aaaaaa888877888778888800000000
0066560000766500007aa900007bb30000788200007cc10000799400007ee20000000000dddddddddddd7dddaaaa77aa77aaaaaa888877888778888800000000
066756600067650000a7a90000b7b3000087820000c7c1000097940000e7e20000000000ccccccccddddd7ddaaaa77aa77aaaaaa888877888778888800000000
066765600066650000aaa90000bbb3000088820000ccc1000099940000eee20000000000ccccccccddddd7ddaaaa77aa77aaaaaaeeee77eee77eeeee00000000
667665660055550000999900003333000022220000111100004444000022220000000000ddddddddddddd7ddaaaa77aa77aaaaaaeee77eee77eeeeee00000000
667666560000000000000000000000000000000000000000000000000000000000000000dddddddd11111171aaaa77aa77aaaaaaeee77eee77eeeeee00000000
05555550000000000000000000000000000000000000000000000000000000000000000011111111111111719999779977999999eee77eee77eeeeee00000000
49aa994499aa99440000000800000000000000030000000000000000000000000000000000000000117111119999977997799999eee77eee77eeeeee00000000
49aa99449aaa99440000000800000000000000030000000000000000000000000000000000000000117111119999977997799999eee77eee77eeeeee00000000
49aa9944aaa999440000008880000000000000030000000000000000000000000000000000000000d7dddddd9999977997799999eee77eee77eeeeee00000000
49aa9944aa9999440000880808800000000000030000000000000000000000000000000000000000d7dddddd9999977997799999eeee77eee77eeeee00000000
49aa9944999999400008000000080000000000030000000000000000000000000000000000000000d7dddddd9999977997799999888877888778888800000000
49aa99449999944000080000000800000000000000000000000000000000000000000000000000007ddddddd4444447744774444888877888778888800000000
49aa99444444440000800000000080000000000000000000000000000000000000000000000000007ccccccc4444447744774444888877888778888800000000
49aa99444444000088880008000888803333300000333330000000000000000000000000000000007ccccccc4444447744774444888877888778888800000000
49aa99944444444400800000000080000000000000000000000000000000000000000000000000007ccccccc0000000000000000888887788877888800000000
49aaa9999999999900080000000800000000000300000000000000000000000000000000000000007ccccccc0000000000000000888887788877888800000000
499aaaaaaaaaaaaa00080000000800000003333333330000000000000000000000000000000000007ddddddd0000000000000000888887788877888800000000
4999aaaaaaaaaaaa0000880808800000000000030000000000000000000000000000000000000000d7dddddd0000000000000000888887788877888800000000
04999999999999990000008880000000000003333300000000000000000000000000000000000000d7dddddd0000000000000000888887788877888800000000
04499999999999990000000800000000000000030000000000000000000000000000000000000000d7dddddd0000000000000000222222772227722200000000
00444444444444440000000800000000000000333000000000000000000000000000000000000000117111110000000000000000222222772227722200000000
00004444444444440000000000000000000000030000000000000000000000000000000000000000117111110000000000000000222222772227722200000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05000000000000005006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555555555555555500060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05556656666666665500600000000000000000000000000000000000000099995600000000000000000000000000000000000000000000000000000000000000
0555555555555555550006606606666666666666666666666666666666609aaa5760000000000000000000000000000000000000000000000000000000000000
05555555555555555500060000000000000000000000000000000000000099995600000000000000000000000000000000000000000000000000000000000000
55555555555555555000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555655050000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555650050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555555509999990999999099999009999990099990009999009999990999990000000000000000000000000000000000000000000000000000000000000000
05556500009aaaaa0aa9aaa09aaaa90aa9aaa09aaaa909aaaa909aaaaa09aaaa9000000000000000000000000000000000000000000000000000000000000000
0555650000900000000900009000090009000090000a090000a09000000900009000000000000000000000000000000000000000000000000000000000000000
0555550009999990009a0009a9999a009a0009a099009a0990099999909a9999a000000000000000000000000000000000000000000000000000000000000000
5556500009aaaaa00090000909aaa00090000900aa90900aa909aaaaa0909aaa0000000000000000000000000000000000000000000000000000000000000000
555650000900000009a0009a0a900009a0000900009090000909000009a0a9000000000000000000000000000000000000000000000000000000000000000000
55565000999999000900009000a9099999900a9999a0a9999a99999909000a900000000000000000000000000000000000000000000000000000000000000000
55555000aaaaaa000a0000a0000a0aaaaaa000aaaa000aaaa0aaaaaa0a0000a00000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
60660666666666666660660600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1e1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000404142000000004748000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000505152535455565758000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000606162636465666768000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000070717171717171717172000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3031313131313131313131210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090909090909090909090909090900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919191919191919191919191919191900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c2c2c2c2c2c2c2c2c2c2c2c2c2c2c2c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010c00002821228212282122821223212232122421224212262122621228212262122421224212232122321221212212122121221215212122121224212242122821228212282122821226212262122421224212
010c00002321223212232122321223212232122421224212262122621226212262122821228212282122821224212242122421224212212122121221212212152121221212212122121221212212122121221212
010c00001a2021a2022621226212262122621229212292122d2122d2122d2122d2122b2122b212292122921228212282122821228212282122821224212242122821228212282122821226212262122421224212
010c00002321223212232122321523212232122421224212262122621226212262122821228212282122821224212242122421224212212122121221212212152121221212212122121200202002020020200202
010c00001c2121c2121c2121c2121c2121c2121c2121c21218212182121821218212182121821218212182121a2121a2121a2121a2121a2121a2121a2121a2121721217212172121721217212172121721217212
010c00001821218212182121821218212182121821218212152121521215212152121521215212152121521214212142121421214212142121421214212142121721217212172121721217212172121721217212
010c00001c2121c2121c2121c2121c2121c2121c2121c21218212182121821218212182121821218212182121a2121a2121a2121a2121a2121a2121a2121a2121721217212172121721217212172121721217212
010c0000182121821218212182121c2121c2121c2121c212212122121221212212122121221212212122121220212202122021220212202122021220212202122021220212202122021220212202122021220212
010c000023112231122311223112201122011221112211122311223112001020010221112211121f1121f1121c1121c1121c1121c1151c1121c11221112211122411224112241122411223112231122111221112
010c000020112201121c1121c1121f1121f11221112211122311223112231122311224112241122411224112211122111221112211121c1121c1121c1121c1151c1121c1121c1121c1121c1121c1121c1121c112
010c000000102001021d1121d1121d1121d112211122111224112241152411524112231122311221112211121f1121f1121f1121f1121f1121f1121c1121c1121f1121f112211121f1121d1121d1121c1121c112
010c000020112201121c1121c1122011220112211122111223112231121f1121f11224112241121f1121f11221112211121c1121c1151c1121c1121c1121c1151c1121c1121c1121c11200102001020010200102
010c00001811218112181121811218112181121811218112151121511215112151121511215112151121511217112171121711217112171121711217112171121411214112141121411214112141121411214112
010c00001511215112151121511215112151121511215112101121011210112101121011210112101121011510112101121011210112101121011210112101121311213112131121311213112131121311213112
010c00001811218112181121811218112181121811218112151121511215112151121511215112151121511217112171121711217112171121711217112171121411214112141121411214112141121411214112
010c000015112151121511215112181121811218112181121c1121c1121c1121c1121c1121c1121c1121c1151c1121c1121c1121c1121c1121c1121c1121c1121c1121c1121c1121c1121c1121c1121c1121c112
010c00000432504325103251032504325043251032510325043250432510325103250432504325103251032509325093251532515325093250932515325153250932509325153251532509325093251532515325
010c0000083250832514325143250732507325133251332507325073251332513325043250432510325103250932509325153251532509325093251532515325093250932515325153250b3250b3250c3250c325
010c00000e3250e325023250232500305003050232502325003050030502325023250932509325053250532500325003250c3250c32500305003050c3250c3250032500325073250732500305003050732507325
010c00000b3250b325173251732500305003051732517325003050030510325103250030500305143251432509325093251032510325093250932510325103250932509325093250932500305003050030500305
010c00000932509325103251032509325093251032510325093250932510325103250932509325103251032508325083251032510325073250732510325103250732507325103251032507325073251032510325
011000001f60022600226002260022600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 00081044
00 01091144
00 020a1244
00 030b1344
00 040c1444
00 050d1444
00 060e1444
02 070f1444

